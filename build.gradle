buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
plugins {
    id "com.github.johnrengelman.shadow" version "7.1.0"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: "java"
apply plugin: "idea"
apply plugin: "com.github.johnrengelman.shadow"
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

version = "${minecraft_version}-" + "${version}"
group = "${group}"
archivesBaseName = "${archive}"

// Workaround to make Mixins and BMS work with the mess that is FG
configurations {
    library
    implementation.extendsFrom library
}

minecraft.runs.all {
    lazyToken('minecraft_classpath') {
        configurations.library.copyRecursive().resolve().collect { it.absolutePath }.join(File.pathSeparator)
    }
}
// End of workaround

repositories {
    maven {
        name = "forge"
        url = "https://files.minecraftforge.net/maven"
    }

    maven {
        url "https://maven.tterrag.com/"
    }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.18'
    runs {
        client {
            workingDirectory project.file('run')
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://maven.blamejared.com' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18-38.0.14'
    library group: 'com.esotericsoftware.yamlbeans', name: 'yamlbeans', version: '1.15'
    //compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.2+:api")
    //runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.2+")
}

reobf {
    shadowJar {}
}

shadowJar {
    dependencies {
        include(dependency(group: 'com.esotericsoftware.yamlbeans', name: 'yamlbeans', version: '1.15'))
    }
    classifier ''
}

jar {
    manifest {
        attributes "FMLAT": "emojiful_at.cfg"
    }
}
artifacts {
    archives shadowJar
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${title}",
                "Specification-Vendor"    : "${team}",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "${team}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "ModSide": "BOTH",
        ],)
    }
}